#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
  keymap {
    compatible = "zmk,keymap";

    default_layer {
      label = "Default";
  // -----------------------------------------------------------------------------------------
  // |  ESC  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |   \   |
  // | LSFT  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |   '   |
  // |       | CTR | OPT | CMD | SFT |     |   |     | SFT  | CMD | OPT | CTR |
  // | L_NAV |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | L_FNC |
  //                           | ENT |               | TAB |
  //               | [ | SPC | L_SYM | BSP |   | DEL | L_NUM | SPC | ] |

      bindings = <
    &kp ESC   &kp Q       &kp W      &kp E      &kp R        &kp T             &kp Y &kp U      &kp I      &kp O      &kp P          &kp BSLH  
    &kp LSHFT &mt LCTRL A &mt LALT S &mt LGUI D &mt LSHFT F  &kp G             &kp H &mt LSFT J &mt LGUI K &mt LALT L &mt LCTRL SEMI &kp SQT
    &mo 3     &kp Z       &kp X      &kp C      &kp V        &kp B             &kp N &kp M      &kp COMMA  &kp DOT    &kp FSLH       &mo 4
                                                             &kp ENTER         &kp TAB
                            &kp LEFT_BRACKET &kp SPACE &mo 1 &kp BSPC          &kp DEL &mo 2 &kp SPACE &kp RIGHT_BRACKET
              >;
      };

    symbol_layer {
  // -----------------------------------------------------------------------------------------
  // |    |     |     |     |     |     |      |  {  |  (  |  &  |  *  |  )  |  }  |
  // |    | CTR | OPT | CMD | SFT |     |      |  :  |  $  |  %  |  ^  |  +  |  \  |
  // |    |     |     |     |     |     |      |  ~  |  !  |  @  |  #  |  |  |  /  |
  //                        |     |                  |  <  |
  //             |    |     |     |     |      |  (  |  )  |  _  |  >  |
      label = "SYMBOL";
      bindings = <
    &trans    &trans    &trans   &trans   &trans     &trans             &kp LBRC  &kp LPAR &kp AMPS  &kp ASTRK &kp RPAR &kp RBRC  
    &trans    &kp LCTRL &kp LALT &kp LGUI &kp LSHFT  &trans             &kp COLON &kp DLLR &kp PRCNT &kp CARET &kp PLUS &kp BSLH
    &trans    &trans    &trans   &trans   &trans     &trans             &kp TILDE &kp EXCL &kp AT    &kp HASH  &kp PIPE &mo FSLH
                                          &trans                                  &kp LT
                            &trans &trans &trans &trans                 &kp LPAR  &mo RPAR &kp UNDER &kp GT
              >;
      };
    number_layer {
  // -----------------------------------------------------------------------------------------
  // |  > |  /  |  7  |  8  |  9  |  -  |      |    |     |     |     |     |     |
  // |  ? |  *  |  4  |  5  |  6  |  =  |      |    | SFT | CMD | OPT | CTR |     |
  // |  < |  %  |  1  |  2  |  3  |  +  |      |    |     |     |     |     |     |
  //                        | ENT |                 |     |
  //             | ,  |  0  |  .  | BSP |      |    |     |     |     |
      label = "NUMBER";
      bindings = <
   &kp GT     &kp KP_DIVIDE   &kp KP_N7 &kp KP_N8 &kp KP_N9 &kp KP_MINUS            &trans    &trans    &trans   &trans   &trans     &trans 
   &kp QMARK  &kp KP_MULTIPLY &kp KP_N4 &kp KP_N5 &kp KP_N6 &kp EQUAL               &trans    &kp LSFT  &kp LGUI &kp LALT &kp LCTRL  &trans
   &kp LT     &kp PRCNT       &kp KP_N1 &kp KP_N2 &kp KP_N3 &mo KP_PLUS             &trans    &trans    &trans   &trans   &trans     &trans 
                                                  &kp KP_N0                                   &trans
                              &kp COMMA &kp KP_N0 &kp KP_DOT &kp BSPC               &trans    &trans    &trans   &trans 
              >;
      };

    navigation_layer {
  // -----------------------------------------------------------------------------------------
  // |    |     |     |     |     |     |      |     | HOME |   ⬆  |  END |     |     |
  // |    | CTR | OPT | CMD | SFT |     |      |     |  <-  |   ⬇  |  ->  |     |     |
  // |    |     |     |     |     |     |      | INS | HOME | PGDN | PGUP | END |     |
  //                        |     |                  |      |
  //             |    |     |     |     |      | ENT | BSP  | DEL  |      |
      label = "NAVIGATION";
      bindings = <
    &trans    &trans    &trans   &trans   &trans     &trans             &kp LBRC  &kp LPAR &kp AMPS  &kp ASTRK &kp RPAR &kp RBRC  
    &trans    &kp LCTRL &kp LALT &kp LGUI &kp LSHFT  &trans             &kp COLON &kp DLLR &kp PRCNT &kp CARET &kp PLUS &kp BSLH
    &trans    &trans    &trans   &trans   &trans     &trans             &kp TILDE &kp EXCL &kp AT    &kp HASH  &kp PIPE &mo FSLH
                                          &trans                                  &kp LT
                            &trans &trans &trans &trans                 &kp LPAR  &mo RPAR &kp UNDER &kp GT
              >;
      };
    function_layer {
  // -----------------------------------------------------------------------------------------
  // |    | F12 |  F7 |  F8 |  F9 |    PSCRN    |          |    |     |     |     |     |     |
  // |    | F11 |  F4 |  F5 |  F6 |    SLCK     |          |    | SFT | CMD | OPT | CTR |     |
  // |    | F10 |  F1 |  F2 |  F3 | PAUSE_BREAK |          |    |     |     |     |     |     |
  //                        |  0  |                             |     |
  //             |    | APP | SPC | TAB |                  |    |     |     |     |
      label = "FUNCTION";
      bindings = <
   &trans &kp PSCRN       &kp F7 &kp F8 &kp F9 &kp F12                   &trans    &trans    &trans   &trans   &trans     &trans 
   &trans &kp SLCK        &kp F4 &kp F5 &kp F6 &kp F11                   &trans    &kp LSFT  &kp LGUI &kp LALT &kp LCTRL  &trans
   &trans &kp PAUSE_BREAK &kp F1 &kp F2 &kp F3 &mo F10                   &trans    &trans    &trans   &trans   &trans     &trans 
                                &kp N0                                             &trans
               &trans &kp K_APP &kp SPC &kp TAB                          &trans    &trans    &trans   &trans 
              >;
      };

   };  
};
