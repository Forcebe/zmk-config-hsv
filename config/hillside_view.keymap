#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>


//   // Key numbers
//   // -----------------------------------------------------------------------------------------
//   // | 0  |  1  |  2  |  3  |  4  |  5  |   |  6  |  7   |  8  |  9  |  10  | 11 |
//   // | 12 |  13 |  14 |  15 |  16 |  17 |   |  18 |  19  |  20 |  21 |  22  | 23 |
//   // | 24 |  25 |  26 |  27 |  28 |  29 |   |  30 |  31  |  32 |  33 |  34  | 35 |
//   //                        |  36 |               |  37 |
//   //            |  38 |  39 |  40 |  41 |   |  42 |  43 |  44  |  45 |

// homerow mod key configs as per https://zmk.dev/docs/keymaps/behaviors/hold-tap?examples=home_row_mods#custom-hold-tap-examples
/ {
    behaviors {
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
            // only get hold behaviors during cross-hand key combinations
            hold-trigger-key-positions = < 6, 7, 8, 9, 10, 11, 18, 19, 20, 21, 22, 23, 30, 31, 32, 33, 34, 35, 37, 42, 43, 44, 45 >; // List of keys on the right side of the keyboard
            // allow combined modifiers on same hand
            hold-trigger-on-release;
        };
        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <  0, 1, 2, 3, 4, 5, 12, 13, 14, 15, 16, 17, 24, 25, 26, 27, 28, 29, 36, 38, 39, 40, 41 >; // List of keys on the left side of the keyboard
            hold-trigger-on-release;
        };
    };
};

/ {
  keymap {
    compatible = "zmk,keymap";

    default_layer {
      display-name = "Default";
  // -----------------------------------------------------------------------------------------
  // |  ESC  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |   \   |
  // | LSFT  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |   '   |
  // |       | CTR | OPT | CMD | SFT |     |   |     | SFT  | CMD | OPT | CTR |
  // | L_NAV |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | L_FNC |
  //                           | ENT |               | TAB |
  //               | [ | SPC | L_SYM | BSP |   | DEL | L_NUM | SPC | ] |

      bindings = <
    &kp ESC   &kp Q        &kp W       &kp E       &kp R         &kp T             &kp Y &kp U         &kp I       &kp O       &kp P           &kp BSLH  
    &kp LSHFT &hml LCTRL A &hml LALT S &hml LGUI D &hml LSHFT F  &kp G             &kp H &hmr LSHIFT J &hmr LGUI K &hmr LALT L &hmr LCTRL SEMI &kp SQT
    &mo 3     &kp Z        &kp X       &kp C       &kp V         &kp B             &kp N &kp M         &kp COMMA   &kp DOT     &kp FSLH        &mo 4
                                                   &kp ENTER                       &kp TAB
                        &kp LEFT_BRACKET &kp SPACE &mo 1 &kp BSPC          &kp DEL &mo 2 &kp SPACE &kp RIGHT_BRACKET
              >;
      };

    symbol_layer {
  // -----------------------------------------------------------------------------------------
  // |    |     |     |     |     |     |      |  {  |  (  |  &  |  *  |  )  |  }  |
  // |    | CTR | OPT | CMD | SFT |     |      |  :  |  $  |  %  |  ^  |  +  |  \  |
  // |    |     |     |     |     |     |      |  `  |  !  |  @  |  #  |  |  |  /  |
  //                        |     |                  |  <  |
  //             |    |     |*****|     |      |  (  |  )  |  _  |  >  |
      display-name = "Sym.";
      bindings = <
    &trans    &trans    &trans   &trans   &trans     &trans             &kp LBRC  &kp LPAR &kp AMPS  &kp ASTRK &kp RPAR &kp RBRC  
    &trans    &kp LCTRL &kp LALT &kp LGUI &kp LSHFT  &trans             &kp COLON &kp DLLR &kp PRCNT &kp CARET &kp PLUS &kp BSLH
    &trans    &trans    &trans   &trans   &trans     &trans             &kp GRAVE &kp EXCL &kp AT    &kp HASH  &kp PIPE &kp FSLH
                                          &trans                                  &kp LT
                            &trans &trans &trans &trans                 &kp LPAR  &kp RPAR &kp UNDER &kp GT
              >;
      };
    number_layer {
  // -----------------------------------------------------------------------------------------
  // |  > |  /  |  7  |  8  |  9  |  -  |      |    |     |     |     |     |     |
  // |  ? |  *  |  4  |  5  |  6  |  =  |      |    | SFT | CMD | OPT | CTR |     |
  // |  < |  %  |  1  |  2  |  3  |  +  |      |    |     |     |     |     |     |
  //                        | ENT |                 |     |
  //             | ,  |  0  |  .  | BSP |      |    |*****|     |     |
      display-name = "Num.";
      bindings = <
   &kp GT     &kp KP_DIVIDE   &kp KP_N7 &kp KP_N8 &kp KP_N9 &kp KP_MINUS            &trans    &trans      &trans   &trans   &trans     &trans 
   &kp QMARK  &kp KP_MULTIPLY &kp KP_N4 &kp KP_N5 &kp KP_N6 &kp EQUAL               &trans    &kp LSHIFT  &kp LGUI &kp LALT &kp LCTRL  &trans
   &kp LT     &kp PRCNT       &kp KP_N1 &kp KP_N2 &kp KP_N3 &kp KP_PLUS             &trans    &trans      &trans   &trans   &trans     &trans 
                                                  &kp ENTER                                   &trans
                              &kp COMMA &kp KP_N0 &kp KP_DOT &kp BSPC               &trans    &trans    &trans   &trans 
              >;
      };


    navigation_layer {     
  // -----------------------------------------------------------------------------------------
  // |    |     |     |     |     |     |      |     | HOME |   ⬆  |  END |     |     |
  // |    | CTR | OPT | CMD | SFT |     |      |     |  <-  |   ⬇  |  ->  |     |     |
  // |****|     |     |     |     |     |      | INS | HOME | PGDN | PGUP | END |     |
  //                        |     |                  |      |
  //             |    |     |     |     |      | ENT | BSP  | DEL  |      |
      display-name = "Nav.";
      bindings = <
    &trans    &trans    &trans   &trans   &trans     &trans             &trans    &kp HOME  &kp UP    &kp END   &trans     &trans
    &trans    &kp LCTRL &kp LALT &kp LGUI &kp LSHFT  &trans             &trans    &kp LEFT  &kp DOWN  &kp RIGHT &trans     &trans
    &trans    &trans    &trans   &trans   &trans     &trans             &trans    &kp HOME  &kp PG_DN &kp PG_UP &kp END    &trans
                                          &trans                                  &trans
                            &trans &trans &trans &trans                 &kp ENTER &kp BSPC  &kp DEL   &trans
              >;
      };
    function_layer {
  // -----------------------------------------------------------------------------------------
  // |    | F12 |  F7 |  F8 |  F9 |    PSCRN    |          |    |     |     |     |     |     |
  // |    | F11 |  F4 |  F5 |  F6 |    SLCK     |          |    | SFT | CMD | OPT | CTR |     |
  // |    | F10 |  F1 |  F2 |  F3 | PAUSE_BREAK |          |    |     |     |     |     |*****|
  //                        |  0  |                             |     |
  //             |    | APP | SPC | TAB |                  |    |     |     |     |
      display-name = "Func.";
      bindings = <
   &trans &kp PSCRN       &kp F7 &kp F8 &kp F9 &kp F12                   &trans    &trans      &trans   &trans   &trans     &trans 
   &trans &kp SLCK        &kp F4 &kp F5 &kp F6 &kp F11                   &trans    &kp LSHIFT  &kp LGUI &kp LALT &kp LCTRL  &trans
   &trans &kp PAUSE_BREAK &kp F1 &kp F2 &kp F3 &kp F10                   &trans    &trans      &trans   &trans   &trans     &trans 
                                &kp N0                                             &trans
               &trans &kp K_APP &kp SPACE &kp TAB                        &trans    &trans    &trans   &trans 
              >;
      };

   };  
};